apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-app.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "my-app.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "my-app.name" . }}
    spec:
      volumes:
        - name: data-volume
          emptyDir:
            sizeLimit: {{ .Values.axelarNode.volumeSize }}

      initContainers:
        - name: axelar-init
          image: "{{ .Values.initContainer.repository }}:{{ .Values.initContainer.tag }}"

          command: [ "sh", "-c" ]
          args:
            - >
              {{- range $index, $cmd := .Values.initContainer.runCommands }}
              {{ $cmd }} &&
              {{- end }} echo "Done"

          env:
      {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ tpl .value $ | quote }}
      {{- end }}

          volumeMounts:
            - name: data-volume
              mountPath: /data

      containers:
        - name: axelar-node
          image: "{{ .Values.axelarNode.repository }}:{{ .Values.axelarNode.tag }}"
          imagePullPolicy: {{ .Values.axelarNode.pullPolicy }}

          command: [ "sh", "-c" ]
          # args: ["sleep 8000"]
          args:
            - >
              {{- range $index, $cmd := .Values.axelarNode.runCommands }}
              {{ $cmd }} &&
              {{- end }} echo "Done"

          ports:
{{ toYaml .Values.axelarNode.ports | indent 10 }}

          env:
          - name: AXELARD_CHAIN_ID
            value: "{{ include "my-app.chain_id" . }}"
      {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ tpl .value $ | quote }}
      {{- end }}

          volumeMounts:
            - name: data-volume
              mountPath: /data
